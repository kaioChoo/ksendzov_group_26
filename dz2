JSON
 4. Создать внешний репозиторий c названием JSON. 
 // https://github.com/kaioChoo/JSON
 5. Клонировать репозиторий JSON на локальный компьютер. 
 // git clone https://github.com/kaioChoo/JSON
 6. Внутри локального JSON создать файл “new.json”. 
 // touch new.json
 7. Добавить файл под гит
 // add new.json
 8. Закоммитить файл. 
 // git commit -m "first commit"
 9. Отправить файл на внешний GitHub репозиторий. 
 // git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JS}ON.
 // https://github.com/kaioChoo/JSON/blob/main/new.json
 11. Отправить изменения на внешний репозиторий. 
 // git add new.json
 // git commit -m "new version json"
 // git push
 12. Создать файл preferences.json
 // touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 // https://github.com/kaioChoo/JSON/blob/main/preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
 // touch skills.json
 // https://github.com/kaioChoo/JSON/blob/main/skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.
 // git add .
 // git commit -m "new version"
 // git push
 16. На веб интерфейсе создать файл bug_report.json.
 // +
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
 // + 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. 
 // https://github.com/kaioChoo/JSON/blob/main/bug_report.json
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 // +
 20. Синхронизировать внешний и локальный репозиторий JSON
 // git pull


XML
 21. Создать внешний репозиторий c названием XML.
 // https://github.com/kaioChoo/XML
 22. Клонировать репозиторий XML на локальный компьютер.
 // git clone https://github.com/kaioChoo/XML
 23. Внутри локального XML создать файл “new.xml”.
 // touch new.xml
 24. Добавить файл под гит.
 // git add new.xml
 25. Закоммитить файл.
 // git commit -m "new version"
 26. Отправить файл на внешний GitHub репозиторий.
 // git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 // https://github.com/kaioChoo/XML/blob/main/new.xml
 28. Отправить изменения на внешний репозиторий.
 // git add new.xml
 // git commit -m "new version"
 // git push
 29. Создать файл preferences.xml
 // touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 // https://github.com/kaioChoo/XML/blob/main/preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 // touch skills.xml
 // https://github.com/kaioChoo/XML/blob/main/skills.xml
 32. Сделать коммит в одну строку.
 // git add .
 // git commit -am "new version"
 33. Отправить сразу 2 файла на внешний репозиторий.
 // git push
 34. На веб интерфейсе создать файл bug_report.xml
 // https://github.com/kaioChoo/XML/blob/main/bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 // +
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 / /+
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 // +
 38. Синхронизировать внешний и локальный репозиторий XML
 // git pull

 //done
